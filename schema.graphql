type Transaction @entity {
  "Transaction hash"
  id: ID!
  "Block number"
  block: BigInt!
  timestamp: BigInt!
}

type StakingContract @entity {
  "Staking contract address"
  id: ID!
  "Creation transaction"
  transaction: Transaction!
}

interface Action @entity {
  "Equals to: <Grant ID>-<Transaction Hash>"
  id: ID!
  "Raw keep amount"
  amount: BigInt!
  "On-chain token grant id"
  grantId: Grant!
  transaction: Transaction!
}

type Stake implements Action @entity {
  "Equals to: <Grant ID>-<Transaction Hash>"
  id: ID!
  "Raw keep amount"
  amount: BigInt!
  "On-chain token grant id"
  grantId: Grant!
  transaction: Transaction!
}

type Withdrawal implements Action @entity {
  "Equals to: <Grant ID>-<Transaction Hash>"
  id: ID!
  "Raw keep amount"
  amount: BigInt!
  "On-chain token grant id"
  grantId: Grant!
  transaction: Transaction!
}

enum GrantStatus {
  Active
  Revoked
}

type Grant @entity {
  "On-chain token grant id"
  id: ID!
  "Stakes associated with grant"
  stakes: [Stake!] @derivedFrom(field: "grantId")
  "Withdrawals associated with grant"
  withdrawals: [Withdrawal!] @derivedFrom(field: "grantId")
  "Token grant status (Active/Revoked)"
  status: GrantStatus!
  "Operator address"
  operator: Bytes
  "Creation transaction"
  transaction: Transaction!
}
